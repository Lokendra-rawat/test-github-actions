name: 'Deploy'
on: ['deployment']


env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: cm/node-app
  APP_NAME: test-node
  APP_NAMESPACE: example-helm


defaults:
  run:
    shell: bash

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v1'

      # - name: 'Deploy'
        # Parameters are pulled directly from the GitHub deployment event so the
        # configuration for the job here is very minimal.

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


  # helmp:
  #   runs-on: 'ubuntu-latest'
  #   needs: deployment
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Prep helm chart
  #       run: |
  #         mv ./helm-github-actions/Chart.yaml ./helm-github-actions/Chart.old.yaml &&
  #         cat ./helm-github-actions/Chart.old.yaml | grep -v appVersion > ./helm-github-actions/Chart.yaml &&
  #         echo -e "\r\nappVersion: v${GITHUB_REF##*/}\r\n" >> ./helm-github-actions/Chart.yaml &&
  #         cat ./helm-github-actions/Chart.yaml
  #     - name: Deploy
  #       uses: WyriHaximus/github-action-helm3@v2
  #       with:
  #         exec: helm upgrade $APP_NAME ./helm-github-actions/ --install --wait --atomic --namespace=$APP_NAMESPACE --set=app.name=$APP_NAME --values=./helm-github-actions/values.yaml
  #         kubeconfig: '${{ secrets.KUBECONFIG }}'


  helmpush:
    runs-on: 'ubuntu-latest'
    needs: deployment
    steps:
      - name: 'helm install'
        uses: 'deliverybot/helm@master'
        with:
          helm: helm3
          token: '${{ github.token }}'
          secrets: '${{ toJSON(secrets) }}'
          version: '${{ github.sha }}'
          chart: './helm-github-actions/Chart.yaml'
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
